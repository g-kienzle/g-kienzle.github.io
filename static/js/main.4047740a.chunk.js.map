{"version":3,"sources":["ContactForm.jsx","Cube.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","a","require","config","name","email","subject","message","templateParams","emailjs","send","process","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","console","log","id","noValidate","type","required","value","maxLength","placeholder","pattern","rows","Cube","App","useState","x","y","scroll","setScroll","useEffect","handle","e","window","scrollX","document","documentElement","scrollWidth","innerWidth","scrollY","scrollHeight","innerHeight","addEventListener","removeEventListener","useScroll","href","style","zIndex","opacity","Math","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uUA0IeA,EApIK,WAAO,IAAD,EAMpBC,cAJFC,EAFsB,EAEtBA,SACAC,EAHsB,EAGtBA,aACAC,EAJsB,EAItBA,MACaC,EALS,EAKtBC,UAAaD,OAeTE,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EAAQ,IAAUC,SACVC,EAAkCJ,EAAlCI,KAAMC,EAA4BL,EAA5BK,MAAOC,EAAqBN,EAArBM,QAASC,EAAYP,EAAZO,QAFf,SAIPC,EAAiB,CACrBJ,OACAC,QACAC,UACAC,WARW,SAUPE,IAAQC,KACZC,kBACAA,mBACAH,EACAG,8BAdW,OAgBbf,IA3BFgB,YAAM,aAAc,CAClBC,SAAU,eACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,UAAW,0BACXC,QAAS,gBAGI,kDAmBbC,QAAQC,IAAR,MAnBa,0DAAH,sDAuBd,OACE,qBAAKH,UAAU,cAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,uBAAMI,GAAG,eAAexB,SAAUJ,EAAaI,GAAWyB,YAAU,EAApE,UAEE,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,QAAf,UACE,+CACEM,KAAK,OACLrB,KAAK,QACDV,EAAS,OAAQ,CACnBgC,SAAU,CAAEC,OAAO,EAAMpB,QAAS,0BAClCqB,UAAW,CACTD,MAAO,GACPpB,QAAS,uCAPf,IAUEY,UAAU,yBACVU,YAAY,UAEbhC,EAAOO,MAAQ,mBAAGe,UAAU,eAAb,SAA6BtB,EAAOO,KAAKG,aAE3D,sBAAKY,UAAU,QAAf,UACE,+CACEM,KAAK,QACLrB,KAAK,SACDV,EAAS,QAAS,CACpBgC,UAAU,EACVI,QAAS,+EALb,IAOEX,UAAU,yBACVU,YAAY,mBAEbhC,EAAOQ,OACN,mBAAGc,UAAU,eAAb,sDAKN,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,MAAf,UACE,+CACEM,KAAK,OACLrB,KAAK,WACDV,EAAS,UAAW,CACtBgC,SAAU,CAAEC,OAAO,EAAMpB,QAAS,0BAClCqB,UAAW,CACTD,MAAO,GACPpB,QAAS,0CAPf,IAUEY,UAAU,yBACVU,YAAY,aAEbhC,EAAOS,SACN,mBAAGa,UAAU,eAAb,SAA6BtB,EAAOS,QAAQC,eAKlD,qBAAKY,UAAU,cAAf,SACE,sBAAKA,UAAU,MAAf,UACE,kDACEY,KAAM,EACN3B,KAAK,WACDV,EAAS,UAAW,CACtBgC,UAAU,KAJd,IAMEP,UAAU,yBACVU,YAAY,aAEbhC,EAAOU,SAAW,mBAAGY,UAAU,eAAb,yCAGvB,wBAAQA,UAAU,aAAaM,KAAK,SAApC,kC,MC7GDO,MAff,WACE,OACE,qBAAKb,UAAU,OAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,gBCmFZc,MA/Df,WAAgB,IAAD,EA1Bf,WAAsB,IAAD,EACSC,mBAAU,CACpCC,EAAG,KACHC,EAAG,OAHc,mBACZC,EADY,KACJC,EADI,KAsBnB,OAfAC,qBAAU,WAER,SAASC,EAAOC,GACdH,EAAU,CACRH,EAAGO,OAAOC,SAAWC,SAASC,gBAAgBC,YAAYJ,OAAOK,YACjEX,EAAGM,OAAOM,SAAWJ,SAASC,gBAAgBI,aAAaP,OAAOQ,eAMtE,OAFAR,OACAA,OAAOS,iBAAiB,SAAUX,GAC3B,kBAAME,OAAOU,oBAAoB,SAAUZ,MAEjD,IAEIH,EAMQgB,GAALjB,GAFG,EAEND,EAFM,EAEHC,GAEV,OACE,sBAAKjB,UAAU,MAAf,UACI,iCACE,qBAAKA,UAAU,SAAf,SACE,+BACE,6BAAI,mBAAGmC,KAAK,QAAR,oBACJ,6BAAI,mBAAGA,KAAK,SAAR,qBACJ,6BAAI,mBAAGA,KAAK,YAAR,wBACJ,6BAAI,mBAAGA,KAAK,WAAR,8BAKV,gCAEE,yBAASnC,UAAU,QAAQI,GAAG,OAA9B,SACE,sBAAKgC,MAAO,CAAC1C,SAAU,QAAS2C,OAAQ,GAAxC,UACE,sBAAKrC,UAAU,kBAAf,UAAiC,oBAAIA,UAAU,SAAd,SAAwB,MAAS,oBAAIA,UAAU,UAAd,6BAClE,iHAIJ,qBAAKA,UAAU,qBAAqBoC,MAAO,CAACC,OAAQ,KACpD,0BAASrC,UAAU,QAAQI,GAAG,QAA9B,UACE,sBAAKgC,MAAO,CAACC,OAAQ,EAAGC,QAAQ,GAAD,OAAKC,KAAKC,IAAM,EAAFvB,EAAI,KAAjD,UACE,0CACA,+BACE,8EAAiD,qBACjD,4DACA,2EACA,6EACA,+BAAI,mBAAGkB,KAAK,8CAAR,2BAAJ,yBAKL,qBAAKnC,UAAU,QAAf,SAAuB,cAAC,EAAD,SAExB,qBAAKA,UAAU,uBACf,0BAASA,UAAU,QAAQI,GAAG,WAA9B,UACE,uCACA,sQAEF,qBAAKJ,UAAU,sBACf,0BAASA,UAAU,OAAOI,GAAG,UAA7B,UACE,yCACA,qBAAKJ,UAAU,OAAf,SAAsB,cAAC,EAAD,gBCrEnByC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.4047740a.chunk.js","sourcesContent":["import { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css';\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n  const onSubmit = async (data) => {\n    require('dotenv').config();\n    const { name, email, subject, message } = data;\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      name='name'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'\n                    ></input>\n                    {errors.name && <p className='errorMessage'>{errors.name.message}</p>}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      name='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'\n                    ></input>\n                    {errors.email && (\n                      <p className='errorMessage'>Please enter a valid email address</p>\n                    )}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      name='subject'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Subject'\n                    ></input>\n                    {errors.subject && (\n                      <p className='errorMessage'>{errors.subject.message}</p>\n                    )}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      name='message'\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Message'\n                    ></textarea>\n                    {errors.message && <p className='errorMessage'>Please enter a message</p>}\n                  </div>\n                </div>\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;","import './Cube.css';\n\nfunction Cube() {\n  return (\n    <div className=\"wrap\">\n        <div className=\"cube\">\n            <div className=\"front\"></div>\n            <div className=\"back\"></div>\n            <div className=\"top\"></div>\n            <div className=\"bottom\"></div>\n            <div className=\"left\"></div>\n            <div className=\"right\"></div>\n        </div>\n    </div>\n  );\n}\n\nexport default Cube;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport ContactForm from './ContactForm';\nimport Cube from './Cube';\n\nfunction useScroll() {\n  const [scroll, setScroll] = useState ({\n    x: null,\n    y: null\n\n  })\n\n  useEffect(() => {\n\n    function handle(e){\n      setScroll({\n        x: window.scrollX / (document.documentElement.scrollWidth-window.innerWidth),\n        y: window.scrollY / (document.documentElement.scrollHeight-window.innerHeight)\n\n      })\n    }\n    window.\n    window.addEventListener(\"scroll\", handle);\n    return () => window.removeEventListener(\"scroll\", handle);\n\n  }, [])\n\n  return scroll;\n}\n\n\nfunction App() {\n\n  const {x, y} = useScroll();\n\n  return (\n    <div className=\"App\">\n        <header>  \n          <nav className=\"navbar\">\n            <ul>\n              <li><a href=\"#home\">Home</a></li>\n              <li><a href=\"#about\">About</a></li>\n              <li><a href=\"#projects\">Projects</a></li>\n              <li><a href=\"#contact\">Contact</a></li>\n            </ul>\n          </nav>\n        </header>\n        \n        <div>\n          \n          <section className=\"black\" id=\"home\"> \n            <div style={{position: 'fixed', zIndex: 0}}>\n              <div className=\"heading-wrapper\"><h1 className=\"ticker\">{'>'}</h1><h1 className=\"heading\">Grey Kienzle</h1></div>\n              <p>Front-end web developer, aspiring software engineer, mathematician at heart</p>\n            </div>\n              \n          </section>\n          <div className=\"spacer black-white\" style={{zIndex: 5}}/>\n          <section className=\"white\" id=\"about\">\n            <div style={{zIndex: 0, opacity: `${Math.min(y*3,1)}`}}>\n              <h1>About Me</h1>\n              <ul>\n                <li>CS/Math Major at the University of Maryland {\"(Class of 2024)\"}</li>\n                <li>Aspiring Software Engineer</li>\n                <li>Experienced in Python, Java, and HTML/CSS</li>\n                <li>Learning front-end development with ReactJS</li>\n                <li><a href=\"https://www.gnu.org/philosophy/free-sw.html\">Free software</a> is my friend</li>\n              </ul>\n              \n            \n            </div>\n           <div className=\"cubey\"><Cube/></div>\n          </section>\n          <div className=\"spacer white-black\"/>\n          <section className=\"black\" id=\"projects\">\n            <h1>Title</h1>\n            <p>Optio nam voluptate asperiores eaque quasi rerum alias earum accusantium cumque est temporibus sint id non deleniti laborum ea blanditiis, reprehenderit atque assumenda corrupti aspernatur eligendi! Eius qui obcaecati maiores?</p>\n          </section>\n          <div className=\"spacer black-blue\"/>\n          <section className=\"blue\" id=\"contact\">\n            <h1>Contact</h1>\n            <div className=\"form\"><ContactForm/></div>\n          </section>\n        \n          \n        </div>\n\n        \n        \n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}